{"version":3,"sources":["home/Home.js","about/about.js","defaultView/header.js","defaultView/default.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","handleChange","e","value","target","setState","inputValue","state","className","style","backgroundImage","height","backgroundSize","backgroundPosition","backgroundRepeat","htmlFor","type","onChange","this","defaultValue","id","name","to","pathname","filters","on","title","Button","variant","React","Component","About","href","Header","DefaultView","handleFilterChange","filterObj","updateFilter","JSON","parse","stringify","addToFavorites","movie","a","axios","post","headers","response","console","log","data","fetch","json","jsonData","favorites","error","removeFavorite","delete","sResponse","movieView","selectedMovie","viewMode","defaultView","Loading","src","alt","Default","favoritesList","removeFav","returnFilter","movieList","addFav","filter","MovieDetails","returnView","location","onV","titleVar","setType","before","after","below","above","sort","b","localeCompare","MovieFilter","event","newType","submitChange","clearHandler","onClick","MoviesList","filterList","url","newObj","prevProps","prevState","_","isEqual","map","index","key","FavoritesList","Favorite","remFav","poster","favorite","LargeMovie","Cast","castObj","cast","character","fetchCastInfo","Crew","crewObj","crew","credit_id","department","job","castOrCrew","castCrew","movieData","production","switchView","MovieView","Image","tagline","rounded","release_date","revenue","runtime","imdb_id","tmdb_id","ratings","average","closeCast","castMember","CastView","profile_path","birthday","biography","place_of_birth","castMem","SingleMovie","substring","App","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9ad21add.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./home.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {inputValue : \"\"};\r\n    }\r\n    handleChange = e => {\r\n            const {value} = e.target;\r\n            this.setState({inputValue : value})\r\n    }\r\n    render() {\r\n        let imgUrl = \"https://images.unsplash.com/photo-1489599849927-2ee91cede3ba?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\";\r\n        return (\r\n            <div className='banner'\r\n                style={{\r\n                    backgroundImage: `url(${imgUrl})`,\r\n                    height: '1200px',\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center center',\r\n                    backgroundRepeat: 'no-repeat',\r\n                }}>\r\n                <div className='middleText' >\r\n                    <h1>Movie Browser</h1>\r\n\r\n                    <form>\r\n                    <label htmlFor=\"title\">Title</label>\r\n                     <input type=\"text\" onChange={this.handleChange} defaultValue=\"\" id=\"movTitle\" name=\"title\"/>\r\n                    </form>\r\n                   \r\n                   <Link to={{ pathname: '/defaultView',\r\n                                 state: {\r\n                                 filters: {on:true,\r\n                                          title:this.state.inputValue}\r\n                                     }\r\n                                }}><Button variant=\"primary\">Show Matching Movies</Button> </Link><Link to={{ pathname: '/defaultView',\r\n                                state: {\r\n                                filters: {on:false,\r\n                                         title:\"\"}\r\n                                    }\r\n                               }}> <Button variant=\"secondary\">Show All Movies</Button> </Link>\r\n                </div>\r\n                <p> Credit for photo https://unsplash.com/photos/evlkOfkQ5rE</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nclass About extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n \r\n    render() {\r\n        return (\r\n            <div className=\"aboutPage\">\r\n                <div className=\"aboutHeader\">\r\n                    <h1>Web 3 Assignment 2</h1>\r\n                    <h2>By Logan Corbett</h2>\r\n                    <br/>\r\n\r\n                </div>\r\n                <div className=\"mainText\">\r\n                    <h2>Technology used:</h2>\r\n                    <ul>\r\n                        <li>React</li>\r\n                        <li>NodeJS</li>\r\n                        <li>MongoDB Atlas</li>\r\n                        <li>VSCode</li>\r\n                        <li>React Bootstrap</li>\r\n                    </ul>\r\n\r\n                    <h2>API Links</h2>\r\n\r\n                    <p><a href=\"https://web3assignment2.herokuapp.com/api/movies\"> Full Movie List Link</a></p>\r\n                   <p> <a href=\"https://web3assignment2.herokuapp.com/api/movies/2\">Specific Movie Based on ID link</a></p>\r\n                   <p> <a href=\"https://web3assignment2.herokuapp.com/api/find/title/The\">Title Substring Link</a></p>\r\n                   <p><a href=\"https://web3assignment2.herokuapp.com/api/find/rating/5/8\">Rating Link</a></p>\r\n                   <p> <a href=\"https://web3assignment2.herokuapp.com/api/find/year/2010/2011\"> API Years Link</a></p>\r\n                </div>\r\n                <div>\r\n                    <h3>Credits:</h3>\r\n                    <p>Photos taken from: <a href=\"https://unsplash.com/photos/evlkOfkQ5rE\">here</a> and <a href=\"https://media2.giphy.com/media/xUbVzuNjpWe0E/giphy.gif?cid=790b76116961966c0be53a69dc4fb7e4679210f10742be1f&rid=giphy.gif\">here</a></p>\r\n                </div>\r\n               <Link to='/home'> <Button variant=\"primary\" >Return to home</Button></Link>\r\n               <Link to={{ pathname: '/defaultView',\r\n                                state: {\r\n                                filters: {on:false,\r\n                                         title:\"\"}\r\n                                    }\r\n                               }}> <Button variant=\"info\">Return to Movie List</Button> </Link>\r\n                </div>\r\n        );\r\n    }\r\n}\r\nexport default About","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass Header extends React.Component {\r\n   \r\n\r\n    render(){\r\n        return(\r\n            <div className=\"item-header\">\r\n        \r\n        <Link to='/home'> <i  className=\"fas fa-theater-masks\" id=\"homeButton\"></i> </Link>\r\n            <Link to='/about'><Button variant=\"info\" className=\"aboutButton\">About</Button> </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Header","import React from 'react';\r\nimport './default.css';\r\nimport 'typeface-roboto';\r\nimport Header from './header'\r\nimport { Button, Container, Row, Col, Image } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport axios from 'axios';\r\nclass DefaultView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { on: onV, title: titleVar } = this.props.location.state.filters;\r\n        let setType = \"\"\r\n        if (onV){\r\n            setType = \"title\"\r\n        }\r\n        this.state = {\r\n            movieList: [],\r\n            favorites: [],\r\n            filters: {\r\n                on: onV,\r\n                title: titleVar,\r\n                before: 3000,\r\n                after: 0,\r\n                below: 10,\r\n                above: 0,\r\n                type: setType\r\n            },\r\n            viewMode: \"loading\",\r\n            selectedMovie : {}\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        try {\r\n            const url = \"https://web3assignment2.herokuapp.com/api/movies\";\r\n            const response = await fetch(url);\r\n            const jsonData = await response.json();\r\n            jsonData.sort((a, b) => a.title.localeCompare(b.title));\r\n            this.setState({ movieList: jsonData, viewMode: \"default\" });\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    handleFilterChange = filterObj => {\r\n        const updateFilter = JSON.parse(JSON.stringify(this.state.filters))\r\n        //const updateFilter = this.state.filters;\r\n        for (let name in filterObj) {\r\n            updateFilter[name] = filterObj[name];\r\n        }\r\n        this.setState({ filters: updateFilter })\r\n    }\r\n    addToFavorites = async (movie) => {\r\n        \r\n        const response = await axios.post(\r\n            'https://web3assignment2.herokuapp.com/api/favorites',\r\n            movie,\r\n            { headers: { 'Content-Type': 'application/json' } })         \r\n          console.log(response.data);\r\n          try {\r\n            const url = \"https://web3assignment2.herokuapp.com/api/favorites\";\r\n            const response = await fetch(url);\r\n            const jsonData = await response.json();\r\n            this.setState({ favorites: jsonData });\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    removeFavorite = async(movie) =>{\r\n        const url = 'https://web3assignment2.herokuapp.com/api/favorites'\r\n        const sResponse = await  axios.delete(url, {data: movie });\r\n        console.log(sResponse);\r\n        try {\r\n            const url = \"https://web3assignment2.herokuapp.com/api/favorites\";\r\n            const response = await fetch(url);\r\n            const jsonData = await response.json();\r\n            this.setState({ favorites: jsonData });\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n  \r\n    movieView = movie => {\r\n        this.setState({selectedMovie:movie});\r\n        this.setState({viewMode:\"movieDetails\"});\r\n    }\r\n    defaultView = () => {\r\n        this.setState({selectedMovie:{},viewMode:\"default\"})\r\n    }\r\n\r\n    Loading = () => {\r\n        return (\r\n            <img src=\"https://media2.giphy.com/media/xUbVzuNjpWe0E/giphy.gif?cid=790b76116961966c0be53a69dc4fb7e4679210f10742be1f&rid=giphy.gif\" alt=\"loading gif\" />\r\n        )\r\n    }\r\n    Default = () => {\r\n        return (<div className=\"mainContainer\">\r\n            <Header />\r\n            <FavoritesList favoritesList={this.state.favorites} movieView={this.movieView} removeFav={this.removeFavorite}  />\r\n            <MovieFilter returnFilter={this.handleFilterChange} className=\"item-filter\" />\r\n            <MoviesList movieList={this.state.movieList} addFav={this.addToFavorites} filter={this.state.filters} movieView={this.movieView} className=\"item-list\"/>\r\n        </div>)\r\n    }\r\n    MovieDetails = () => {\r\n        return (<div className=\"container\">\r\n            <Header /> \r\n            <FavoritesList favoritesList={this.state.favorites} movieView={this.movieView} removeFav={this.removeFavorite}/>\r\n            <LargeMovie movie={this.state.selectedMovie} addFav={this.addToFavorites} returnView={this.defaultView} />           \r\n        </div>\r\n        \r\n\r\n        )\r\n    }\r\n    render() {\r\n        if (this.state.viewMode == \"loading\") {\r\n            return this.Loading();\r\n        }\r\n        else if (this.state.viewMode == \"default\") {\r\n            return this.Default();\r\n\r\n        } else if (this.state.viewMode == \"movieDetails\") {\r\n            return this.MovieDetails();\r\n        }\r\n\r\n    }\r\n}\r\n\r\nclass MovieFilter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"\",\r\n            before: 3000,\r\n            after: 0,\r\n            below: 10,\r\n            above: 0,\r\n            type: \"\"\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        let newType = \"\"\r\n        switch(event.target.name) {\r\n            case \"title\":\r\n                newType = \"title\";\r\n              break;\r\n            case \"before\":\r\n                newType = \"year\";\r\n              break;\r\n            case \"after\":\r\n                newType = \"year\";\r\n            break;\r\n            case \"above\":\r\n                newType = \"rating\";\r\n              break;\r\n            case \"below\":\r\n                newType = \"rating\"\r\n              break\r\n          }\r\n        this.setState({\r\n            [event.target.name]: event.target.value, type: newType\r\n        })\r\n\r\n    }\r\n    submitChange = () => {\r\n        const filterObj = this.state;\r\n        filterObj.on = true;\r\n        this.props.returnFilter(filterObj);\r\n    }\r\n    clearHandler = () => {\r\n        const filterObj = {\r\n            title: \"\",\r\n            before: 3000,\r\n            after: 0,\r\n            below: 10,\r\n            above: 0,\r\n            on: false,\r\n            type: \"\"\r\n        };\r\n        this.setState({ title: filterObj.title, before: filterObj.before, after: filterObj.after, below: filterObj.below, above: filterObj.above, on: filterObj.on, type:filterObj.type });\r\n        this.props.returnFilter(filterObj);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"item-filter\">\r\n                <h1>Movie Filter</h1>\r\n                <form>\r\n                    <label id=\"titleHeader\" htmlFor=\"title\">Title</label> <br />\r\n                    <input type=\"text\" onChange={this.handleChange} defaultValue={this.state.title} name=\"title\" /> <br />\r\n\r\n                    <label id=\"titleHeader\" htmlFor=\"year\">Year</label> <br />\r\n                   \r\n                     \r\n                    <label htmlFor=\"other\">Between</label> <br /> <input type=\"number\" onChange={this.handleChange} name=\"after\" /> \r\n                    <input type=\"number\" onChange={this.handleChange} name=\"before\" /> <br />\r\n                    <label id=\"titleHeader\" htmlFor=\"rating\">Rating</label> <br />\r\n        \r\n                    <label htmlFor=\"rating\">Between:(0-10)</label> <br />\r\n                    <input type=\"number\" onChange={this.handleChange} name=\"above\" />\r\n                    <input type=\"number\" onChange={this.handleChange} name=\"below\" /> <br />\r\n\r\n                </form>\r\n                <Button variant=\"outline-dark\" onClick={this.submitChange}>Filter</Button>\r\n                <Button variant=\"outline-dark\"  onClick={this.clearHandler}>Clear</Button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nclass MoviesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                        filterList : [], filter: {}\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        if( this.props.filter.on) {\r\n            if (this.props.filter.type == \"title\"){\r\n                try {\r\n                    const url = \"https://web3assignment2.herokuapp.com/api/find/title/\"+this.props.filter.title;\r\n                    const response = await fetch(url);\r\n                    const jsonData = await response.json();\r\n                    jsonData.sort((a, b) => a.title.localeCompare(b.title));\r\n                   \r\n                    const newObj = JSON.parse(JSON.stringify(this.props.filter));\r\n                    this.setState({filterList: jsonData, filter: newObj});\r\n                }\r\n                catch (error) {\r\n                    console.error(error);\r\n                }\r\n            }\r\n            \r\n            if (this.props.filter.type == \"year\"){\r\n                try {\r\n                    const url = `https://web3assignment2.herokuapp.com/api/find/year/${this.props.movieList.filter.after}/${this.props.movieList.filter.before}`;\r\n                    const response = await fetch(url);\r\n                    const jsonData = await response.json();\r\n                    jsonData.sort((a, b) => a.title.localeCompare(b.title));\r\n                    this.setState({filterList: jsonData});\r\n                }\r\n                catch (error) {\r\n                    console.error(error);\r\n                }\r\n            }   \r\n            \r\n            if (this.props.filter.type == \"rating\"){\r\n                try {\r\n                    const url = `https://web3assignment2.herokuapp.com/api/rating/${this.props.filter.above}/${this.props.movieList.filter.below}`;\r\n                    const response = await fetch(url);\r\n                    const jsonData = await response.json();\r\n                    jsonData.sort((a, b) => a.title.localeCompare(b.title));\r\n                    this.setState({filterList: jsonData});\r\n                }\r\n                catch (error) {\r\n                    console.error(error);\r\n                }\r\n            }\r\n            }\r\n    \r\n        else{\r\n            this.setState({filterList: this.props.movieList});\r\n        }\r\n    \r\n     }\r\n\r\n    async componentDidUpdate(prevProps,prevState) {\r\n        if(!_.isEqual(prevProps.filter,this.props.filter)){\r\n        if( this.props.filter.on) {\r\n            if (this.props.filter.type == \"title\"){\r\n                try {\r\n                    const url = \"https://web3assignment2.herokuapp.com/api/find/title/\"+this.props.filter.title;\r\n                    const response = await fetch(url);\r\n                    const jsonData = await response.json();\r\n                    jsonData.sort((a, b) => a.title.localeCompare(b.title));\r\n                    this.setState({filterList: jsonData});\r\n                }\r\n                catch (error) {\r\n                    console.error(error);\r\n                }\r\n            }\r\n            \r\n            if (this.props.filter.type == \"year\"){\r\n                try {\r\n                    const url = `https://web3assignment2.herokuapp.com/api/find/year/${this.props.filter.after}/${this.props.filter.before}`;\r\n                    const response = await fetch(url);\r\n                    const jsonData = await response.json();\r\n                    jsonData.sort((a, b) => a.title.localeCompare(b.title));\r\n                    this.setState({filterList: jsonData});\r\n                }\r\n                catch (error) {\r\n                    console.error(error);\r\n                }\r\n            }   \r\n            \r\n            if (this.props.filter.type == \"rating\"){\r\n                try {\r\n                    const url = `https://web3assignment2.herokuapp.com/api/find/rating/${this.props.filter.above}/${this.props.filter.below}`;\r\n                    const response = await fetch(url);\r\n                    const jsonData = await response.json();\r\n                    jsonData.sort((a, b) => a.title.localeCompare(b.title));\r\n                    this.setState({filterList: jsonData});\r\n                }\r\n                catch (error) {\r\n                    console.error(error);\r\n                }\r\n            }\r\n            }\r\n    \r\n        else{\r\n            this.setState({filterList: this.props.movieList});\r\n        }\r\n    }\r\n    }\r\n\r\n     filterList = () => { \r\n         return this.state.filterList;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"item-list\">\r\n                <h1>Movie List</h1>\r\n                <table className=\"movieTable\">\r\n                   <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Title</th>\r\n                            <th>Year</th>\r\n                            <th>Rating</th>\r\n                            <th></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.filterList().map((movie, index) => {\r\n                            return <SingleMovie movie={movie} key={movie.id} addFav={this.props.addFav} movieView={this.props.movieView} />\r\n                        })}\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nclass FavoritesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    Favorite = (props) => {\r\n        return (\r\n            <div className=\"favPoster\">\r\n                <Button variant=\"danger\" className=\"removeButton\" onClick={()=>props.remFav(props.movie)}><i className=\"fa fa-window-close\" ></i></Button>\r\n            <img  onClick={()=>this.props.movieView(props.movie)} src={\"http://image.tmdb.org/t/p/w92\" + props.movie.poster} alt={props.movie.title} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item-favorite\">\r\n                {this.props.favoritesList.map((favorite, index) => {\r\n                    return <this.Favorite movie={favorite} key={favorite.id} movieView={this.props.movieView} remFav={this.props.removeFav}/>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass LargeMovie extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { movieData: {}, castCrew:\"cast\",castMember:{},viewMode:\"loading\" };\r\n    }\r\n\r\n    async componentDidMount() {\r\n       \r\n        try {\r\n            const url = \"https://web3assignment2.herokuapp.com/api/movies/\" + this.props.movie.id;\r\n          \r\n            \r\n            const response = await fetch(url);\r\n            const jsonData = await response.json();\r\n            this.setState({ movieData: jsonData[0], viewMode:\"movie\" });\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n    }\r\n    async componentDidUpdate(prevProps) {\r\n        if(this.props.movie.id !== prevProps.movie.id){\r\n        try {\r\n            const url = \"https://web3assignment2.herokuapp.com/api/movies/\" + this.props.movie.id;\r\n            const response = await fetch(url);\r\n            const jsonData = await response.json();\r\n            this.setState({ movieData: jsonData[0], viewMode:\"movie\" });\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    }\r\n\r\n    Cast = (castObj) =>{\r\n        return(\r\n            <table className=\"castTable\">\r\n                 <tbody>\r\n                        <tr>\r\n                            <th>Character</th>\r\n                            <th>Name</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    {castObj.map((cast,index) => {\r\n                        return(\r\n                            <tr key={cast.id}>\r\n                                <td>{cast.character}</td>\r\n                                <td>{cast.name} </td>\r\n                                <td><Button variant=\"outline-info\" onClick={() => this.fetchCastInfo(cast)}>View</Button></td>\r\n                            </tr>)\r\n                    })}\r\n \r\n                    </tbody>\r\n            </table>\r\n        )   \r\n    }\r\n    async fetchCastInfo (castObj){\r\n        try {\r\n            let url = `https://api.themoviedb.org/3/person/${castObj.id}?api_key=fbf53756fe16ca36e16c1ed7a5df8032`;\r\n            const response = await fetch(url);\r\n            const castMem = await response.json();\r\n            this.setState({ castMember: castMem, viewMode: \"cast\" });\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    Crew = (crewObj) =>{\r\n        return(\r\n            <table className=\"crewTable\">\r\n                 <tbody>\r\n                        <tr>\r\n                            <th>Department</th>\r\n                            <th>Job</th>\r\n                            <th>Name</th>\r\n                        </tr>\r\n                    {crewObj.map((crew,index) => {\r\n                        return(\r\n                            <tr key={crew.credit_id}>\r\n                                <td>{crew.department}</td>\r\n                                <td>{crew.job} </td>\r\n                                <td>{crew.name}</td>\r\n                            </tr>)\r\n                    })}\r\n \r\n                    </tbody>\r\n            </table>\r\n        )   \r\n    }\r\n    Loading = () => {\r\n        return (\r\n            <img src=\"https://media2.giphy.com/media/xUbVzuNjpWe0E/giphy.gif?cid=790b76116961966c0be53a69dc4fb7e4679210f10742be1f&rid=giphy.gif\" alt=\"loading gif\" />\r\n        )\r\n    }\r\ncastOrCrew = () =>{\r\n    if (this.state.castCrew === \"cast\"){\r\n        return this.Cast(this.state.movieData.production.cast) ;\r\n    }\r\n    if (this.state.castCrew === \"crew\"){\r\n        return this.Crew(this.state.movieData.production.crew) ;\r\n    }\r\n    \r\n    }\r\n    switchView = () =>{\r\n        if(this.state.castCrew === \"cast\"){\r\n            this.setState({castCrew:\"crew\"});\r\n        }\r\n        else if (this.state.castCrew === \"crew\") {\r\n            this.setState({castCrew:\"cast\"})\r\n    }\r\n}\r\nMovieView = () =>{\r\n    return(<>\r\n        \r\n        <div className=\"item-movie-left\">\r\n            \r\n            <h1>{this.state.movieData.title}</h1> <Button variant=\"outline-danger\" onClick={() => this.props.returnView()}><i className=\"fa fa-window-close\" ></i></Button>                    \r\n          <div>  <Image className=\"p-3\" src={\"http://image.tmdb.org/t/p/w185\" + this.state.movieData.poster} alt={this.state.movieData.tagline} rounded /></div>\r\n        \r\n            <div><Button variant=\"outline-success\" onClick={() => this.props.addFav(this.props.movie)}>Add To Favorites</Button> </div>\r\n            <p><strong>Relase Date:</strong> {this.state.movieData.release_date}</p>\r\n            <p><strong>Revenue:</strong> ${this.state.movieData.revenue}</p>\r\n            <p><strong>Runtime:</strong> {this.state.movieData.runtime} minutes</p>\r\n            <p><strong>Tagline:</strong> {this.state.movieData.tagline}</p>\r\n            <a href={\"https://www.imdb.com/title/\" + this.state.movieData.imdb_id}> <p>IMDB Link  </p></a>\r\n            <a href={\"https://www.themoviedb.org/movie/\" + this.state.movieData.tmdb_id}> <p>TMDB Link</p> </a>\r\n            <p><strong>Rating:</strong> {this.state.movieData.ratings.average}</p> \r\n        </div>\r\n        \r\n        <div className=\"item-movie-right\">\r\n            <h1>Cast and Crew</h1>\r\n            <Button variant=\"info\" onClick={() =>this.switchView()}>Switch Cast or Crew</Button>\r\n            {this.castOrCrew()}\r\n\r\n\r\n        </div>\r\n        \r\n    </>\r\n\r\n    )\r\n}\r\ncloseCast = () =>{\r\n    this.setState({castMember: {}, viewMode: \"movie\" })\r\n}\r\nCastView = () =>{\r\n    \r\n    return(\r\n        <>\r\n            <div className=\"item-leftSide\">\r\n                <h1>{this.state.castMember.name}</h1>\r\n               <div> <img className=\"p-1\" src={\"http://image.tmdb.org/t/p/w185\" + this.state.castMember.profile_path} alt={this.state.castMember.name} /></div>\r\n                <button onClick={() => this.closeCast()}>Close Cast View</button>\r\n                <p><strong>Birthday:</strong> {this.state.castMember.birthday}</p>\r\n                <p><strong>Biography:</strong> {this.state.castMember.biography}</p>\r\n                <p><strong>Place of Birth:</strong> {this.state.castMember.place_of_birth}</p>\r\n\r\n            </div>\r\n            <div className=\"item-rightSide\">\r\n                <h1>Cast and Crew</h1>\r\n                <Button variant=\"info\" onClick={() =>this.switchView()}>Switch Cast or Crew</Button>\r\n                {this.castOrCrew()}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\n    render() {\r\n        if (this.state.viewMode == \"loading\") {\r\n            return this.Loading();\r\n        }\r\n        else if (this.state.viewMode == \"movie\") {\r\n            return this.MovieView();\r\n\r\n        } else if (this.state.viewMode == \"cast\") {\r\n            return this.CastView();\r\n        }\r\n    }\r\n    }\r\n\r\n\r\nclass SingleMovie extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <tr className=\"singleRow\">\r\n\r\n                <td>\r\n                    <img src={\"http://image.tmdb.org/t/p/w92\" + this.props.movie.poster} alt={this.props.movie.title} />\r\n                </td>\r\n                <td>\r\n                    <p id=\"title\" onClick={()=>this.props.movieView(this.props.movie)}>{this.props.movie.title}</p>\r\n                </td>\r\n                <td>\r\n                    {this.props.movie.release_date.substring(0, 4)}\r\n                </td>\r\n                <td>\r\n                    \r\n                        {this.props.movie.ratings.average}\r\n                        \r\n                </td>\r\n                <td>\r\n                <div className=\"rightSide\">\r\n                        <Button variant=\"outline-success\" onClick={() => this.props.addFav(this.props.movie)} type=\"submit\" >\r\n                            <i className=\"fas fa-heart\"></i></Button>\r\n                        <Button variant=\"outline-dark\" onClick={()=>this.props.movieView(this.props.movie)}>View</Button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default DefaultView","import React from 'react';\r\nimport './App.css';\r\nimport Home from './home/Home';\r\nimport About from './about/about'\r\nimport DefaultView from './defaultView/default'\r\nimport {Route} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n <main>\r\n   <Route path='/' exact component={Home} />\r\n   <Route path='/home' exact component={Home} />\r\n  <Route path ='/about' exact component={About} />\r\n   <Route path='/defaultView' exact component={DefaultView} />\r\n  </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}